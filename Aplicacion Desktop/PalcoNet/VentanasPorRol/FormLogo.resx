<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>